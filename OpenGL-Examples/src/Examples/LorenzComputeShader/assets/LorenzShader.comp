#version 430
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct Point {
	vec4 position;
	vec4 color;
};

layout(std430, binding = 0) buffer PointsBuffer {
	Point[] pointsArr;
};

uniform float dt;
uniform float a;
uniform float b;
uniform float c;

vec3 nextLorenzCoord(vec3 coord){
	vec3 nextCoord;
	float x = coord.x;
	float y = coord.y;
	float z = coord.z;

	float dx = (a * (y - x)) * dt;
    float dy = (x * (b - z) - y) * dt;
	float dz = (x * y - c * z) * dt;

	nextCoord.x = x + dx;
	nextCoord.y = y + dy;
	nextCoord.z = z + dz;

	return nextCoord;
}

void main(){
	uint index = gl_GlobalInvocationID.x;
	
	Point currentPoint = pointsArr[index];

	vec3 newLorenzPoint = nextLorenzCoord(currentPoint.position.xyz);
	
	pointsArr[index].position = vec4(newLorenzPoint, 1.0);	
}